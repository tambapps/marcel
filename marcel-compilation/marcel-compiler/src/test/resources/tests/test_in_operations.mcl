import static org.junit.jupiter.api.Assertions.assertEquals
import static org.junit.jupiter.api.Assertions.assertFalse
import static org.junit.jupiter.api.Assertions.assertNull
import static org.junit.jupiter.api.Assertions.assertTrue

list<int> list = [1, 2, 3, 4]

/*
 * map and/or filter
 */
assertEquals([2, 3, 4, 5] as list<int>, [for int a in list -> a + 1])

assertEquals([2, 3] as list<int>, [for int a in list -> a + 1 if a <= 2])
assertEquals([1, 2, 3] as list<int>, [for int a in list if a < 4])

/*
 * find
 */
assertEquals(2, when int a in list -> a % 2 == 0)
assertNull(when int a in list -> a < 0)

/*
 * all, any
 */
assertFalse(when int a in list &> a % 2 == 0)
assertTrue(!when int a in list &> a % 2 == 0)
assertTrue(when int a in list &> a > 0 && a <= 10)

assertTrue(when int a in list |> a % 2 == 0)
assertFalse(!when int a in list |> a % 2 == 0)
assertFalse(when int a in list |> a == 25)

/*
 * chained
 */
assertEquals(2, list >> when int a -> a % 2 == 0)
assertEquals(4, [for int a in list -> a + 3] >> when int a -> a % 2 == 0)
